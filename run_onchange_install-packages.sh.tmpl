#!/bin/bash

# This script runs whenever the package list (packages-nix.txt) changes.
# It handles both installation of new packages and removal of packages that are no longer in the list.

# Default values
DRY_RUN=false
VERBOSE=false

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --dry-run)
            DRY_RUN=true
            shift
            ;;
        --verbose)
            VERBOSE=true
            shift
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
    esac
done

# Logging function
log() {
    local level=$1
    shift
    if [[ $VERBOSE == true || $level == "ERROR" ]]; then
        echo "[$level] $*"
    fi
}

# Function to get currently installed Nix packages
get_installed_nix() {
    # Get all user-installed packages, excluding system packages
    nix profile list | grep "nixpkgs#" | grep -v "paths:" | awk '{print $2}' | sed 's/nixpkgs#//'
}

# Function to install or update a package
install_package() {
    local package=$1
    
    if [[ $DRY_RUN == true ]]; then
        log "INFO" "Would install/update $package"
        return
    fi
    
    log "INFO" "Installing/updating $package"
    if nix profile install "nixpkgs#${package}" --impure; then
        log "SUCCESS" "Successfully installed/updated $package"
    else
        log "ERROR" "Failed to install/update $package"
        return 1
    fi
}

# Function to remove a package
remove_package() {
    local package=$1
    
    if [[ $DRY_RUN == true ]]; then
        log "INFO" "Would remove $package"
        return
    fi
    
    log "INFO" "Removing $package"
    if nix profile remove "nixpkgs#${package}"; then
        log "SUCCESS" "Successfully removed $package"
    else
        log "ERROR" "Failed to remove $package"
        return 1
    fi
}

# Main script
log "INFO" "Starting package management"

# Use chezmoi's source directory to find packages-nix.txt
PACKAGES_FILE="{{ .chezmoi.sourceDir }}/packages-nix.txt"

if [[ ! -f "$PACKAGES_FILE" ]]; then
    log "ERROR" "Could not find packages file at $PACKAGES_FILE"
    exit 1
fi

# Read desired packages from packages-nix.txt
declare -A desired_packages
while IFS= read -r line; do
    # Skip comments and empty lines
    [[ $line =~ ^#.*$ || -z $line ]] && continue
    desired_packages[$line]=1
done < "$PACKAGES_FILE"

# Get currently installed packages
installed_packages=($(get_installed_nix))

# Remove packages that are no longer desired
for pkg in "${installed_packages[@]}"; do
    if [[ -z "${desired_packages[$pkg]}" ]]; then
        remove_package "$pkg"
    fi
done

# Install or update desired packages
for pkg in "${!desired_packages[@]}"; do
    if [[ ! " ${installed_packages[@]} " =~ " ${pkg} " ]]; then
        install_package "$pkg"
    fi
done

log "INFO" "Package management completed" 